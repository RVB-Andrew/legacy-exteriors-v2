---
import WidgetWrapper from '../ui/WidgetWrapper.astro';
import type { CallToAction, Widget } from '~/types';
import Headline from '~/components/ui/Headline.astro';
import Button from '~/components/ui/Button.astro';
import Image from '~/components/common/Image.astro';

interface Props extends Widget {
  title?: string;
  subtitle?: string;
  tagline?: string;
  callToAction?: CallToAction;
  actions?: string | CallToAction[];
  backgroundImage?: string;
  overlayOpacity?: number;
  showLeaves?: boolean;
  fullHeight?: boolean;
}

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  actions = await Astro.slots.render('actions'),
  backgroundImage = '',
  overlayOpacity = 0.7,
  showLeaves = true,
  fullHeight = false,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper 
  id={id} 
  isDark={isDark} 
  containerClass={`max-w-6xl mx-auto ${classes?.container ?? ''} ${fullHeight ? 'py-12 md:py-20' : ''}`} 
  bg={bg}
>
  <div class="relative overflow-hidden rounded-xl shadow-xl border border-green-100">
    <!-- Background Image with Overlay -->
    <div class="absolute inset-0 z-0">
      {backgroundImage ? (
        <Image
          src={backgroundImage}
          alt="Background"
          class="w-full h-full object-cover"
          widths={[400, 768, 1024, 2040]}
          sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, (max-width: 2039px) 1024px, 2040px"
          loading="eager"
        />
      ) : (
        <div class="w-full h-full bg-gradient-to-br from-primary/80 to-secondary/80"></div>
      )}
      <div 
        class="absolute inset-0 bg-black" 
        style={`opacity: ${overlayOpacity}`}
      ></div>
    </div>

    <!-- Decorative Elements -->
    {showLeaves && (
      <>
        <div class="absolute -top-6 -right-6 w-24 h-24 rotate-45 bg-green-500/20 rounded-full z-10"></div>
        <div class="absolute -bottom-6 -left-6 w-16 h-16 rotate-12 bg-green-500/20 rounded-full z-10"></div>
        <div class="absolute top-1/4 right-10 w-8 h-8 bg-white/10 rounded-full z-10"></div>
        <div class="absolute bottom-1/3 left-10 w-12 h-12 bg-white/10 rounded-full z-10"></div>
      </>
    )}

    <!-- Content -->
    <div class="relative z-10 px-6 py-12 md:px-12 md:py-16 text-center text-white">
      <Headline
        title={title}
        subtitle={subtitle}
        tagline={tagline}
        classes={{
          container: 'mb-4 md:mb-8',
          title: 'text-white text-4xl md:text-5xl font-bold leading-tighter tracking-tighter mb-4 font-heading',
          subtitle: 'text-white/90 text-xl md:text-2xl',
        }}
      />
      
      <div class="mx-auto max-w-xl">
        <slot />
      </div>

      {
        actions && (
          <div class="max-w-xs sm:max-w-md m-auto flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4 mt-8">
            {Array.isArray(actions) ? (
              actions.map((action) => (
                <div class="flex w-full sm:w-auto">
                  <Button 
                    {...(action || {})} 
                    class={`w-full sm:mb-0 px-6 py-3.5 text-white ${action.variant === 'primary' ? '' : ''}`} 
                  />
                </div>
              ))
            ) : (
              <Fragment set:html={actions} />
            )}
          </div>
        )
      }
    </div>
  </div>
</WidgetWrapper>