---
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';
import { Icon } from 'astro-icon/components';

export interface Props {
  title?: string;
  subtitle?: string;
  tagline?: string;
  leftColumn?: {
    title: string;
    items: Array<{
      title: string;
      description: string;
      icon?: string;
      number?: string | number;
      color?: 'red' | 'orange' | 'yellow' | 'green' | 'blue' | 'primary';
    }>;
  };
  rightColumn?: {
    title: string;
    items: Array<{
      title: string;
      description: string;
      icon?: string;
      number?: string | number;
      color?: 'red' | 'orange' | 'yellow' | 'green' | 'blue' | 'primary';
    }>;
  };
  id?: string;
  isDark?: boolean;
  classes?: Record<string, string>;
  bg?: string;
}

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  leftColumn,
  rightColumn,
  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;

// Color mapping for icons and numbers
const colorClasses = {
  red: 'bg-red-100 dark:bg-red-900/30 text-red-600 dark:text-red-400',
  orange: 'bg-orange-100 dark:bg-orange-900/30 text-orange-600 dark:text-orange-400',
  yellow: 'bg-yellow-100 dark:bg-yellow-900/30 text-yellow-600 dark:text-yellow-400',
  green: 'bg-green-100 dark:bg-green-900/30 text-green-600 dark:text-green-400',
  blue: 'bg-blue-100 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400',
  primary: 'bg-primary/10 text-primary',
};
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  {(title || subtitle || tagline) && (
    <Headline 
      title={title} 
      subtitle={subtitle} 
      tagline={tagline}
    />
  )}
  
  <div class="grid grid-cols-1 md:grid-cols-2 gap-8 md:gap-12 max-w-5xl mx-auto">
    <!-- Left Column -->
    {leftColumn && (
      <div class="space-y-6">
        <h3 class="text-2xl font-bold text-center tracking-tight dark:text-white sm:text-3xl mb-4 font-heading">{leftColumn.title}</h3>
        <div class="space-y-4">
          {leftColumn.items.map((item) => (
            <div class="flex items-start">
              <div class="flex-shrink-0">
                {item.number ? (
                  <span class={`inline-flex items-center justify-center h-10 w-10 rounded-full ${colorClasses[item.color || 'primary']}`}>
                    <span class="text-lg font-medium">{item.number}</span>
                  </span>
                ) : item.icon ? (
                  <div class={`inline-flex items-center justify-center h-10 w-10 rounded-full ${colorClasses[item.color || 'primary']}`}>
                    <Icon name={item.icon} class="h-6 w-6" />
                  </div>
                ) : null}
              </div>
              <div class="ml-4">
                <h4 class="font-semibold text-gray-900 dark:text-white">{item.title}</h4>
                <p class="text-sm text-gray-600 dark:text-gray-400">{item.description}</p>
              </div>
            </div>
          ))}
        </div>
      </div>
    )}
    
    <!-- Right Column -->
    {rightColumn && (
      <div class="space-y-6">
        <h3 class="text-2xl font-bold text-center tracking-tight dark:text-white sm:text-3xl mb-4 font-heading">{rightColumn.title}</h3>
        <div class="space-y-4">
          {rightColumn.items.map((item) => (
            <div class="flex items-start">
              <div class="flex-shrink-0">
                {item.number ? (
                  <span class={`inline-flex items-center justify-center h-10 w-10 rounded-full ${colorClasses[item.color || 'primary']}`}>
                    <span class="text-lg font-medium">{item.number}</span>
                  </span>
                ) : item.icon ? (
                  <div class={`inline-flex items-center justify-center h-10 w-10 rounded-full ${colorClasses[item.color || 'primary']}`}>
                    <Icon name={item.icon} class="h-6 w-6" />
                  </div>
                ) : null}
              </div>
              <div class="ml-4">
                <h4 class="font-semibold text-gray-900 dark:text-white">{item.title}</h4>
                <p class="text-sm text-gray-600 dark:text-gray-400">{item.description}</p>
              </div>
            </div>
          ))}
        </div>
      </div>
    )}
  </div>
  
  <!-- Optional slot for additional content below columns -->
  <slot />
</WidgetWrapper>