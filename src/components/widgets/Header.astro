---
import { Icon } from 'astro-icon/components';
import ToggleMenu from '~/components/common/ToggleMenu.astro';
import Button from '~/components/ui/Button.astro';
import { SITE } from 'astrowind:config';

import { getHomePermalink } from '~/utils/permalinks';
import { trimSlash } from '~/utils/permalinks';
import type { CallToAction } from '~/types';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<CallToAction>;
  isSticky?: boolean;
  showToggleTheme?: boolean;
  position?: string;
}

const {
  id = 'header',
  links = [],
  actions = [],
  isSticky = false,
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky, dark: true },
    'top-0 z-40 flex-none mx-auto w-full bg-page border-b border-gray-800 transition-[opacity] ease-in-out',
  ]}
  {...isSticky ? { 'data-aw-sticky-header': true } : {}}
  {...id ? { id } : {}}
>
  <div
    class="relative text-default py-3 px-3 md:px-6 mx-auto w-full max-w-7xl md:flex md:justify-center"
  >
    <!-- Mobile Header (Logo centered, menu on right, action on left) -->
    <div class="flex justify-between md:hidden">
      <div>
        {actions?.length ? <Button {...actions[0]} class="py-2 px-3 text-sm" /> : ''}
      </div>
      
      <div class="flex justify-center">
        <a class="flex items-center" href={getHomePermalink()}>
          <img 
            src="/images/legacy-exteriors-main-logo.png" 
            alt={SITE?.name || 'Legacy Exteriors'} 
            class="h-14 w-auto" 
            loading="eager"
          />
        </a>
      </div>
      
      <div class="flex items-center">
        <ToggleMenu />
      </div>
    </div>
    
    <!-- Desktop Navigation (centered) -->
    <nav
      class="items-center w-full md:w-auto hidden md:flex overflow-y-auto overflow-x-hidden md:overflow-y-visible md:overflow-x-auto md:justify-center"
      aria-label="Main navigation"
    >
      <ul
        class="flex flex-col md:flex-row md:self-center w-full md:w-auto text-xl md:text-[0.9375rem] tracking-[0.01rem] font-medium"
      >
        {
          links.map(({ text, href, links }) => (
            <li class={links?.length ? 'dropdown' : ''}>
              {links?.length ? (
                <>
                  <button
                    type="button"
                    class="hover:text-primary px-4 py-3 flex items-center"
                  >
                    {text} <Icon name="tabler:chevron-down" class="w-3.5 h-3.5 ml-0.5 hidden md:inline" />
                  </button>
                  <ul class="dropdown-menu md:backdrop-blur-md rounded md:absolute pl-4 md:pl-0 md:hidden font-medium md:bg-page/90 md:min-w-[200px] drop-shadow-xl">
                    {links.map(({ text: text2, href: href2 }) => (
                      <li>
                        <a
                          class:list={[
                            'first:rounded-t last:rounded-b md:hover:bg-gray-800 hover:text-primary py-2 px-5 block',
                            { 'aw-link-active': href2 === currentPath },
                          ]}
                          href={href2}
                        >
                          {text2}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a
                  class:list={[
                    'hover:text-primary px-4 py-3 flex items-center font-medium transition duration-150 ease-in-out',
                    { 'aw-link-active': href === currentPath },
                  ]}
                  href={href}
                >
                  {text}
                </a>
              )}
            </li>
          ))
        }
      </ul>
    </nav>
  </div>
</header>