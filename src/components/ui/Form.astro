---
import type { Form as Props } from '~/types';
import { Icon } from 'astro-icon/components';

const { inputs, textarea, disclaimer, button = 'Contact us', description = '', services = [] } = Astro.props;

// Default services if none provided
const defaultServices = [
  { value: 'excavation', label: 'Excavation & Site Preparation', icon: 'tabler:bulldozer' },
  { value: 'drainage', label: 'Drainage Solutions', icon: 'tabler:droplet' },
  { value: 'trenching', label: 'Utility & Drainage Trenching', icon: 'tabler:line-dashed' },
  { value: 'driveways', label: 'Driveway Installation & Repair', icon: 'tabler:road' },
  { value: 'landscaping', label: 'Landscape Grading & Preparation', icon: 'tabler:plant' },
  { value: 'sod', label: 'Sod Installation', icon: 'tabler:garden-cart' },
  { value: 'other', label: 'Other Services', icon: 'tabler:tools' },
];

const serviceOptions = services.length > 0 ? services : defaultServices;
---

<form
  id="contact-form"
  data-netlify="true"
  class="relative p-4 rounded-lg border border-green-800/50 bg-[#050505] overflow-hidden"
  data-astro-reload
  novalidate
>

  <!-- Honeypot Spam Protection -->
  <input type="checkbox" name="botcheck" class="hidden" style="display: none;" />

  <!-- Google reCAPTCHA v3 - invisible, no UI needed -->
  <input type="hidden" name="g-recaptcha-response" id="g-recaptcha-response" />

  <!-- Decorative elements -->
  <div class="absolute top-0 right-0 w-40 h-40 bg-green-900/20 rounded-full -mt-20 -mr-20 z-0"></div>
  <div class="absolute bottom-0 left-0 w-40 h-40 bg-green-900/10 rounded-full -mb-20 -ml-20 z-0"></div>
  <div class="absolute top-1/4 left-10 w-6 h-6 bg-green-600/10 rounded-full z-0"></div>
  <div class="absolute bottom-1/3 right-10 w-8 h-8 bg-green-600/10 rounded-full z-0"></div>

  <div class="relative z-10">
    {
      inputs &&
        inputs.map(
          ({ type = 'text', name, label = '', autocomplete = 'on', placeholder = '' }, index) =>
            name && (
              <div
                class="mb-6 transition-all duration-300 hover:translate-x-1"
                style={{ animationDelay: `${index * 100}ms` }}
              >
                {label && (
                  <label for={name} class="flex items-center text-sm font-medium text-green-400 mb-2">
                    {name === 'name' && <Icon name="tabler:user" class="w-4 h-4 mr-2 inline-block" />}
                    {name === 'email' && <Icon name="tabler:mail" class="w-4 h-4 mr-2 inline-block" />}
                    {name === 'phone' && <Icon name="tabler:phone" class="w-4 h-4 mr-2 inline-block" />}
                    {label} *
                  </label>
                )}
                <input
                  type={type}
                  name={name}
                  id={name}
                  autocomplete={autocomplete}
                  placeholder={placeholder}
                  required={true}
                  class="py-3 px-4 block w-full text-md rounded-lg border-2 border-gray-800 hover:border-green-900 bg-[#0a0a0a] text-white placeholder-gray-500 focus:outline-none focus:border-green-600 focus:ring-2 focus:ring-green-600/50 transition-all duration-300"
                />
                <div class="invalid-feedback text-red-400 text-sm mt-1 hidden">
                  Please provide your {label.toLowerCase() || name}.
                </div>
              </div>
            )
        )
    }

    <!-- Service Selection Dropdown with visual enhancements -->
    <div class="mb-6 group transition-all duration-300 hover:translate-x-1">
      <label for="service" class="flex items-center text-sm font-medium text-green-400 mb-2">
        <Icon name="tabler:list-check" class="w-4 h-4 mr-2 inline-block" />
        Service Needed *
      </label>
      <div class="relative">
        <select
          id="service"
          name="service"
          class="appearance-none py-3 px-4 block w-full text-md rounded-lg border-2 border-gray-800 hover:border-green-900 bg-[#0a0a0a] text-white placeholder-gray-500 focus:outline-none focus:border-green-600 focus:ring-2 focus:ring-green-600/50 transition-all duration-300"
          required
        >
          <option value="" disabled selected>Select a service</option>
          {serviceOptions.map((service) => <option value={service.value}>{service.label}</option>)}
        </select>
        <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-400">
          <Icon name="tabler:chevron-down" class="w-5 h-5 group-hover:text-green-500 transition-colors duration-300" />
        </div>
      </div>
      <div class="invalid-feedback text-red-400 text-sm mt-1 hidden">Please select a service.</div>
    </div>

    {
      textarea && (
        <div class="mb-6 transition-all duration-300 hover:translate-x-1">
          <label for="textarea" class="flex items-center text-sm font-medium text-green-400 mb-2">
            <Icon name="tabler:message" class="w-4 h-4 mr-2 inline-block" />
            {textarea.label} *
          </label>
          <textarea
            id="textarea"
            name={textarea.name ? textarea.name : 'message'}
            rows={textarea.rows ? textarea.rows : 4}
            placeholder={textarea.placeholder}
            required
            class="py-3 px-4 block w-full text-md rounded-lg border-2 border-gray-800 hover:border-green-900 bg-[#0a0a0a] text-white placeholder-gray-500 focus:outline-none focus:border-green-600 focus:ring-2 focus:ring-green-600/50 resize-none transition-all duration-300"
          />
          <div class="invalid-feedback text-red-400 text-sm mt-1 hidden">Please enter your message.</div>
        </div>
      )
    }

    <div id="recaptcha-error" class="text-red-400 text-sm mt-1 hidden mb-4">
      reCAPTCHA verification failed. Please try again.
    </div>

    {
      disclaimer && (
        <div class="mt-6 px-3 py-3 border border-gray-800/30 rounded-lg bg-gray-900/30">
          <p class="text-sm text-gray-400 text-center">
            <Icon name="tabler:info-circle" class="w-4 h-4 mr-2 inline-block text-green-500" />
            {disclaimer.label || 'By filling out this form, you agree to be contacted about our services.'}
          </p>
        </div>
      )
    }

    {
      button && (
        <div class="mt-8 relative">
          <div class="absolute inset-0 bg-gradient-to-r from-green-600/20 to-green-900/20 blur-lg transform group-hover:scale-105 transition-all duration-300" />
          <button
            type="submit"
            class="relative w-full px-6 py-3.5 text-white font-medium rounded-lg overflow-hidden bg-primary focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 focus:ring-offset-[#050505] group"
          >
            <div class="absolute inset-0 w-0 bg-white/10 transition-all duration-500 ease-out group-hover:w-full" />
            <div class="relative flex items-center justify-center">
              <span>{button}</span>
              <Icon
                name="tabler:send"
                class="w-5 h-5 ml-2 transform group-hover:translate-x-1 transition-transform duration-300"
              />
            </div>
          </button>
        </div>
      )
    }

    <div id="result" class="mt-4 text-center"></div>

    {
      description && (
        <div class="mt-4 text-center">
          <p class="text-sm text-gray-500">{description}</p>
        </div>
      )
    }
  </div>
</form>

<style>
  .invalid-feedback {
    display: none;
  }

  .was-validated .invalid-feedback {
    display: block !important;
  }

  .was-validated input:invalid,
  .was-validated select:invalid,
  .was-validated textarea:invalid {
    border-color: #dc3545 !important;
  }

  /* Create a disabled button style */
  button[type='submit']:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }

  /* Subtle pulsing highlight effect on form focus */
  form:focus-within::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: linear-gradient(45deg, #04582380, transparent, #04582380);
    border-radius: 0.5rem;
    z-index: -1;
    animation: pulse 2s ease-in-out infinite;
  }

  @keyframes pulse {
    0%,
    100% {
      opacity: 0.5;
    }
    50% {
      opacity: 0.8;
    }
  }

  /* Smooth animations for form interactions */
  form input,
  form select,
  form textarea {
    transition: all 0.3s ease;
  }

  form input:focus,
  form select:focus,
  form textarea:focus {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(4, 88, 35, 0.15);
  }
</style>

<script is:inline>
  document.addEventListener('DOMContentLoaded', function () {
    const form = document.getElementById('contact-form');
    const result = document.getElementById('result');
    const submitButton = form.querySelector('button[type="submit"]');

    form.addEventListener('submit', async function (e) {
      e.preventDefault();
      e.stopPropagation();

      // Check form validity
      if (!form.checkValidity()) {
        form.classList.add('was-validated');
        return;
      }

      // Clear any previous results
      result.textContent = '';
      result.className = 'mt-4 text-center';

      // Disable submit button and show loading state
      submitButton.disabled = true;
      const originalText = submitButton.innerHTML;
      submitButton.innerHTML = `
        <div class="relative flex items-center justify-center">
          <span>Sending...</span>
          <svg class="animate-spin h-5 w-5 ml-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
        </div>
      `;

      try {
        // Execute reCAPTCHA v3
        const token = await grecaptcha.execute('6LdHW0orAAAAAMxlEjgc9Kc0PiVVXeIJeeKoma5c', { action: 'submit' });

        // Add token to form
        document.getElementById('g-recaptcha-response').value = token;

        // Prepare form data
        const formData = new FormData(form);

        // Submit to Web3Forms
        const response = await fetch('https://api.web3forms.com/submit', {
          method: 'POST',
          body: formData,
        });

        const data = await response.json();

        if (data.success) {
          result.innerHTML = `
            <div class="p-4 rounded-lg bg-green-900/30 border border-green-800">
              <div class="flex items-center justify-center mb-2">
                <svg class="w-8 h-8 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
              </div>
              <p class="text-green-400 font-medium">Thank you for contacting us!</p>
              <p class="text-gray-400 text-sm mt-1">We'll get back to you as soon as possible.</p>
            </div>
          `;
          form.reset();
          form.classList.remove('was-validated');

          // Optional: Scroll to result
          result.scrollIntoView({ behavior: 'smooth', block: 'center' });
        } else {
          throw new Error(data.message || 'Something went wrong!');
        }
      } catch (error) {
        console.error('Error:', error);
        document.getElementById('recaptcha-error').classList.remove('hidden');
        result.innerHTML = `
          <div class="p-4 rounded-lg bg-red-900/30 border border-red-800">
            <div class="flex items-center justify-center mb-2">
              <svg class="w-8 h-8 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
            <p class="text-red-400 font-medium">Oops! Something went wrong.</p>
            <p class="text-gray-400 text-sm mt-1">${error.message || 'Please try again later or contact us directly.'}</p>
          </div>
        `;
      } finally {
        // Re-enable submit button and restore original text
        submitButton.disabled = false;
        submitButton.innerHTML = originalText;
      }
    });
  });
</script>
