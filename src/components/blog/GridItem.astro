---
import { APP_BLOG } from 'astrowind:config';
import type { Post } from '~/types';

import Image from '~/components/common/Image.astro';
import { Icon } from 'astro-icon/components';

import { findImage } from '~/utils/images';
import { getPermalink } from '~/utils/permalinks';

export interface Props {
  post: Post;
}

const { post } = Astro.props;
const image = await findImage(post.image);

const link = APP_BLOG?.post?.isEnabled ? getPermalink(post.permalink, 'post') : '';
---

<article
  class="mb-8 transition intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade overflow-hidden shadow-lg hover:shadow-xl border border-green-500/30 dark:border-green-700/30 flex flex-col rounded-md relative group"
>
  <div class="absolute inset-0 w-full h-full">
    {
      image && (
        <Image
          src={image}
          class="w-full h-full object-cover"
          widths={[600, 900]}
          width={600}
          sizes="(max-width: 900px) 600px, 900px"
          alt={post.title}
          aspectRatio="16:9"
          layout="fill"
          loading="lazy"
          decoding="async"
        />
      )
    }
    <div class="absolute inset-0 bg-black/70 group-hover:bg-black/65 transition-colors duration-300"></div>
  </div>

  <div class="p-8 flex-grow flex flex-col relative z-10 min-h-80">
    <div class="flex items-center mb-3 text-sm text-gray-300">
      <Icon name="tabler:calendar" class="w-4 h-4 inline-block mr-1" />
      <time datetime={String(post.publishDate)}>
        {new Date(post.publishDate).toLocaleDateString('en-US', { 
          year: 'numeric', 
          month: 'short', 
          day: 'numeric' 
        })}
      </time>
      
      {post.author && (
        <>
          <span class="mx-2">•</span>
          <Icon name="tabler:user" class="w-4 h-4 inline-block mr-1" />
          <span>{post.author}</span>
        </>
      )}
      
      {post.readingTime && (
        <>
          <span class="mx-2">•</span>
          <Icon name="tabler:clock" class="w-4 h-4 inline-block mr-1" />
          <span>{post.readingTime} min read</span>
        </>
      )}
    </div>

    <h3 class="text-2xl font-bold leading-tight mb-4 font-heading text-white">
      {
        link ? (
          <a class="inline-block hover:text-green-400 transition ease-in duration-200" href={link}>
            {post.title}
          </a>
        ) : (
          post.title
        )
      }
    </h3>

    <p class="text-gray-200 mb-6 text-lg">{post.excerpt}</p>
    
    {post.tags && post.tags.length > 0 && (
      <div class="flex flex-wrap gap-2 mb-6">
        {post.tags.map((tag) => (
          <span class="text-xs text-gray-200 bg-gray-700/50 px-2 py-1 rounded">
            #{tag.title}
          </span>
        ))}
      </div>
    )}
    
    <div class="mt-auto flex justify-between items-center pt-4 border-t border-white/20">
      {link && (
        <a href={link} class="inline-flex items-center text-green-400 font-medium">
          Read More <Icon name="tabler:arrow-right" class="w-4 h-4 ml-1" />
        </a>
      )}
      
      {post.category && (
        <span class="text-sm text-white bg-green-600/80 px-3 py-1 rounded">
          {post.category.title}
        </span>
      )}
    </div>
  </div>
  
  {link && (
    <a href={link} class="absolute inset-0 w-full h-full z-0" aria-hidden="true">
      <span class="sr-only">Read more about {post.title}</span>
    </a>
  )}
</article>